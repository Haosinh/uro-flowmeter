@using System.Text.Json
@model UroMeter.Web.Models.MedicalRecord.MedicalRecordUserId

@{
    Layout = "_Layout";
}

<div class="container bg-white py-5 px-sm-3 px-md-5 mt-4 rounded">
    <p class="mb-3">
        @Html.ActionLink("Back", "Index", "User", null, new { @class = "btn btn-primary" })
    </p>
    <hr class="border border-primary border-2 opacity-50" />
    <p class="h2">Medical Record of User @Model.Patient.Name</p>
    <div class="row">
        <div class="col">
            @Html.LabelFor(model => model.Patient.Id, new { @class = "form-label" })
            <label for="@Model.Patient.Id" class="form-label">Id: </label>
            <p class="form-control">@Model.Patient.Id</p>
        </div>
        <div class="col">
            <label for="@Model.Patient.Name" class="form-label">Name: </label>
            <p class="form-control">@Model.Patient.Name</p>
        </div>
        <div class="col">
            <label for="@Model.Patient.BirthDay" class="form-label">BirthDay: </label>
            <p class="form-control">@Model.Patient.BirthDay</p>
        </div>
        <div class="col">
            <label for="@Model.Patient.Phone" class="form-label">Phone: </label>
            <p class="form-control">@Model.Patient.Phone</p>
        </div>
    </div>
    <hr class="border border-primary border-2 opacity-50" />
    <div class="row">
        <div class="col">
            <p class="h3">Medical records</p>
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col"></th>
                        <th scope="col">Record ID</th>
                        <th scope="col">Time</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.Records.Count; ++i)
                    {
                        var record = Model.Records[i];

                        <tr>
                            <th scope="row">@(i + 1)</th>
                            <td>@record.Id</td>
                            <td>@record.CheckUpAt.ToString("dd/MM/yyyy HH:mm:ss")</td>
                            <td><a asp-controller="Record" asp-action="Index" asp-route-userId="@Model.Patient.Id" asp-route-recordId="@record.Id">View</a></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    @if (Model.DataPoints.Count != 0)
    {
        <hr class="border border-primary border-2 opacity-50" />
        <div class="container">
            <div class="row justify-content-center">
                <canvas id="line-chart"></canvas>
            </div>
        </div>
    }
    <hr class="border border-primary border-2 opacity-50" />
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js@4.0.1/dist/chart.umd.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/moment@2"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-moment@1"></script>
<script src="https://cdn.jsdelivr.net/npm/hammerjs@2.0.8/hammer.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom@2.0.1/dist/chartjs-plugin-zoom.min.js"></script>

<script>
    const dataPoints = JSON.parse('@Html.Raw(JsonSerializer.Serialize(Model.DataPoints))');

    console.log(dataPoints);

    var ctx = document.getElementById('line-chart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            datasets: [
                {
                    label: "Volumes",
                    data: dataPoints
                }
            ]
        },
        options: {
            responsive: false,
            title: {
                display: true,
                text: 'Flow Chart'
            },
            scales: {
                x: {
                    title: {
                        display: true,
                        text: "Time"
                    },
                    type: 'linear',
                    ticks: {
                        source: 'data',
                        autoSkip: true
                    }
                },
                y: {
                    title: {
                        display: true,
                        text: "Volume (In Milliliter)"
                    }
                }
            },
            plugins: {
                zoom: {
                    zoom: {
                        wheel: {
                            enabled: true,
                            modifierKey: 'alt'
                        },
                    }
                }
            }
        }
    });
    Chart.register(zoomPlugin);
</script>
